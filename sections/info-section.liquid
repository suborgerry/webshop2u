{{ 'info-section.css' | asset_url | stylesheet_tag }}

<div class="info-heading-container">
  <p class="info-preheading">{{ section.settings.pre_heading }}</p>
  <h2 class="info-heading">{{ section.settings.heading }}</h2>
  <p class="info-subheading">{{ section.settings.sub_heading }}</p>
</div>
<div class="info-items">
  {% for item in section.blocks %}
    <div class="info-item" style="--color: {{ item.settings.color }}">
      {% if item.settings.info_type == 'text' %}
        <p class="info-item__text">
          {%- if item.settings.add_symbol == '$' %}{{- item.settings.add_symbol }}{% endif %}
          <span id="item_number" data-number="{{ item.settings.text_value }}">{{ item.settings.text_value }}</span>
          {%- if item.settings.add_symbol == '+' %}{{- item.settings.add_symbol }}{% endif %}
        </p>
      {% elsif item.settings.info_type == 'number' %}
        <p class="info-item__number">
          {%- if item.settings.add_symbol == '$' %}{{- item.settings.add_symbol }}{% endif %}
          <span id="item_number" data-number="{{ item.settings.number_value }}">{{ item.settings.number_value }}</span>
          {%- if item.settings.add_symbol == '+' %}{{- item.settings.add_symbol }}{% endif %}
        </p>
      {% endif %}
      <p class="info-item_subheading">{{ item.settings.sub_info }}</p>
    </div>
  {% endfor %}
</div>

<script defer="defer">
  (() => {
    const section = document.querySelector('#shopify-section-{{ section.id }}');
    const options = {
      root: null,
      threshold: window.innerWidth >= 768 ? 1.0 : 0.2,
    };

    const callback = function (entries, observer) {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          // console.log(entry.target);
          setAnimation(entry.target);
          observer.disconnect();
        }
      });
    };

    const observer = new IntersectionObserver(callback, options);

    observer.observe(section);

    const setAnimation = (section) => {
      const items = section.querySelectorAll('#item_number');

      items.forEach((item) => {
        animationNumbers(item);
      });
    };

    const animationNumbers = (item) => {
      const itemValue = item.innerHTML;

      const num = parseInt(itemValue);

      if (num === 0) {
        return;
      }

      const interval = 3000 / num;

      let iteration = 0;

      const animation = setInterval(() => {
        if (iteration >= num) {
          clearInterval(animation);
          return;
        }

        if (iteration > num - 10) {
          iteration++;
        } else if (iteration >= 9999) {
          iteration = iteration + 1000;
        } else if (iteration >= 999) {
          iteration = iteration + 1000;
        } else if (iteration >= 99) {
          iteration = iteration + 100;
        } else if (iteration >= 9) {
          iteration = iteration + 10;
        } else if (iteration >= 0) {
          iteration++;
        } else {
          iteration++;
        }

        item.innerHTML = iteration;
      }, interval);
    };
  })();
</script>
{% schema %}
{
  "name": "Info",
  "class": "info-section",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "pre_heading",
      "label": "Pre heading",
      "default": "A Shopify agency you can rely on."
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Why chose Handmade Hub Agency?"
    },
    {
      "type": "text",
      "id": "sub_heading",
      "label": "Sub heading",
      "default": "Learn more about Handmade Hub"
    }
  ],
  "blocks": [
    {
      "name": "Info item",
      "type": "info_item",
      "limit": 4,
      "settings": [
        {
          "type": "select",
          "id": "info_type",
          "label": "Info type",
          "options": [
            {
              "label": "Text",
              "value": "text"
            },
            {
              "label": "Number",
              "value": "number"
            }
          ],
          "default": "text"
        },
        {
          "type": "text",
          "id": "text_value",
          "label": "Text value",
          "default": "Text value",
          "info": "Enable if 'text' selected"
        },
        {
          "type": "range",
          "id": "number_value",
          "label": "Number value",
          "min": 1,
          "max": 100,
          "step": 1,
          "unit": "pnt",
          "default": 10,
          "info": "Enable if 'number' is selected"
        },
        {
          "type": "select",
          "id": "add_symbol",
          "label": "Add plus to number",
          "default": "not",
          "options": [
            {
              "label": "Not",
              "value": "not"
            },
            {
              "label": "Plus",
              "value": "+"
            },
            {
              "label": "Dollar",
              "value": "$"
            }
          ]
        },
        {
          "type": "color",
          "id": "color",
          "label": "Values color",
          "default": "#000",
          "info": "Applies to all values"
        },
        {
          "type": "text",
          "id": "sub_info",
          "label": "Sub heading",
          "default": "Awesome heading"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Info",
      "blocks": [
        {
          "type": "info_item"
        },
        {
          "type": "info_item"
        },
        {
          "type": "info_item"
        },
        {
          "type": "info_item"
        }
      ]
    }
  ]
}
{% endschema %}
